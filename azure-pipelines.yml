# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool:
  vmImage: 'windows-2019'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
  - job: run_build
    displayName: 'Running Build Steps'
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:SkipInvalidConfigurations=true /p:publishUrl="$(build.artifactStagingDirectory)/deploy"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          # Write your PowerShell commands here.
          
          Get-Location
          Get-ChildItem -Path . -Recurse -Force
        workingDirectory: '$(build.artifactStagingDirectory)/deploy'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(build.artifactStagingDirectory)/deploy'
        artifact: 'WebApp'
        publishLocation: 'pipeline'
    
  - job: push_container
    displayName: 'Push Container to acr'
    dependsOn: run_build
    steps:

    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'WebApp'
        targetPath: '$(Pipeline.Workspace)/deploy'
    
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          # Write your PowerShell commands here.
          Get-Childitem -Path $(Pipeline.Workspace)/deploy -Recurse -Force
  
    - task: Docker@2
      inputs:
        containerRegistry: 'plsamplewebapi_acr'
        repository: 'plsamplewebapi'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        buildContext: '$(Pipeline.Workspace)/deploy'
        tags: |
          $(Build.BuildId)
          latest
  
  - job: deploy
    displayName: 'Deploy to aks'
    dependsOn: push_container
    steps:
    - task: KubernetesManifest@0
      inputs:
        action: 'createSecret'
        kubernetesServiceConnection: 'plsamplewebapi_aks'
        secretType: 'dockerRegistry'
        secretName: 'plsamplewebapi-acr-secret'
        dockerRegistryEndpoint: 'plsamplewebapi_acr'
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'plsamplewebapi_aks'
        manifests: 'k8s_deploy.yml'
        containers: 'plsamplewebapi.azurecr.io/plsamplewebapi:latest'
        imagePullSecrets: 'plsamplewebapi-acr-secret'
